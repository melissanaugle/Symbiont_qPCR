library(tidyr)
data <- read.csv("rawdata/2014data/2014data_04_26_21_ahyac31-36,38-43_50th.csv", header = F)
head(data)
data
View(data)
colnames(data) <- as.character(unlist(data[20,]))
head(data)
View(data)
data <- read.csv("rawdata/2014data/2014data_04_26_21_ahyac31-36,38-43_50th.csv", header = F)
View(data)
colnames(data) <- as.character(unlist(data[20,]))
data <- data[-c(1:20),]
head(data)
tail(data)
data <- spread(data, Fluor, Cq)
head(data)
#confirm neg control
data %>%
filter(Content == "Neg Ctrl")
data$Target <- NULL
data$Content <- NULL
data$Well <- NULL
head(data)
data$`Starting Quantity (SQ)` <- NULL
head(data)
tail(data)
write.csv(data,"cleandata/2014data/2014data_clean_04_26_21_ahyac31-36,38-43_50th.csv")
write.csv(data,"cleandata/2014data/2014data_clean_04_26_21_ahyac31-36,38-43_50th.csv", row.names = F)
setwd(dir = "~/Desktop/GitHub/Symbiont_qPCR/")
rm( list = ls())
graphics.off()
library(ggplot2)
library(dplyr)
library(tidyr)
library(mosaic)
library(RColorBrewer)
#read in all clean csv files
dat1 <- read.csv("cleandata/2014data/2014data_clean_04_26_21_ahyac31-36,38-43_50th.csv")
#bind data files together
#dat <- rbind(dat1,dat2)
nrow(dat)
head(dat)
#read in all clean csv files
dat <- read.csv("cleandata/2014data/2014data_clean_04_26_21_ahyac31-36,38-43_50th.csv")
head(dat)
dat$FAM <- as.numeric(dat$FAM)
dat$VIC <- as.numeric(dat$VIC)
View(dat)
dat <- dat[!(dat$Sample=="neg con"),]
View(dat)
dat$Site = "n"
View(dat)
dat$Site[1:24,] <- "Faga'tele"
dat$Site[1:24,]
dat$Site[c(1:24),]
dat[1:24,]
dat$Site(dat[1:24,]) <- "Faga'tele"
dat[1:24,]
dat[1:24,4] <- "Faga'tele"
dat[25:36,4] <- "Cannery"
dat_log <- dat
dat_log$FAM_log <- log10(dat_log$FAM)
dat_log$VIC_log <- log10(dat_log$VIC)
View(dat_log)
dat_ratio_log <- dat_log %>%
group_by(Sample, Site) %>%
summarize(FAM_log_mean = mean(FAM_log, na.rm = TRUE), VIC_log_mean = mean(VIC_log, na.rm = TRUE))
dat_ratio_log
View(dat_ratio_log)
dat_ratio_log$cellnum_C <- (2^(40 - dat_ratio_log$VIC_log_mean)) / 9
dat_ratio_log$cellnum_C[is.na(dat_ratio_log$VIC_log_mean)] <- (2^(40-10000000000000))
dat_ratio_log$cellnum_D <- (2^(40 - dat_ratio_log$FAM_log_mean)) / 1
View(dat_ratio_log)
dat_ratio_log$D_prop <- dat_ratio_log$cellnum_D / (dat_ratio_log$cellnum_C + dat_ratio_log$cellnum_D)
dat_ratio_log$C_prop <- dat_ratio_log$cellnum_C / (dat_ratio_log$cellnum_C + dat_ratio_log$cellnum_D)
dat_ratio_gather <- gather(dat_ratio_log, "Species", "Ratio", 7:8)
dat_ratio_gather$Ratio <- round(dat_ratio_gather$Ratio, digits = 4)
View(dat_ratio_gather)
View(dat_ratio_log)
View(dat_ratio_gather)
ggplot(dat_ratio_log, aes(x = Site, y = C_prop, fill = Site)) + geom_violin() + theme_bw()  +
scale_fill_brewer(palette = "Set3") + ylab("Log Proportion of Cladocopium") + xlab("") + geom_dotplot(binaxis='y', stackdir='center', dotsize=0.1, binwidth = 0.04)
dat_ratio_means <- dat_ratio_log %>%
group_by(Site) %>%
summarize(D_prop_avg = mean(D_prop), C_prop_avg = mean(C_prop))
View(dat_ratio_means)
dat_ratio_means <- gather(dat_ratio_means, "Species", "Ratio", 2:3)
dat_ratio_means$logRatio <- dat_ratio_means$Ratio
#plots mean proportions for each site
ggplot(dat_ratio_means, aes(x = Site, y = logRatio, fill = Species)) + geom_col() + theme_bw()  + ylab("Log Proportion of Durisdinium and Cladocopium") + scale_fill_manual(labels = c("Cladocopium", "Durisdinium"), values = c("violetred2", "royalblue3")) + xlab("") + theme(legend.title = element_blank())
dat$samplemonth = "n"
dat[1:36,5] <- "March"
View(dat)
ggplot(dat_ratio_log, aes(x = Site, y = C_prop, fill = Site)) + geom_violin() + theme_bw()  +
scale_fill_brewer(palette = "Set3") + ylab("Log Proportion of Cladocopium") + xlab("") + geom_dotplot(binaxis='y', stackdir='center', dotsize=0.1, binwidth = 0.04)
setwd(dir = "~/Desktop/GitHub/Symbiont_qPCR/")
rm( list = ls())
graphics.off()
library(ggplot2)
library(ggpubr)
library(plyr)
library(dplyr)
library(tidyr)
library(reshape2)
library(mosaic)
library(RColorBrewer)
dat1 <- read.csv("cleandata/08_05_20_fields1-4.csv")
dat2 <- read.csv("cleandata/10_14_20_fields5-8.csv")
dat3 <- read.csv("cleandata/12_14_20_redos.csv")
dat <- rbind(dat1,dat2)
nrow(dat)
#remove and replace with redos
dat<-dat[!(dat$Sample=="Alu_F2" | dat$Sample=="TeleF5" | dat$Sample=="VatiaF6"),]
dat3 <- dat3[!(dat3$Sample=="AluF4"),]
dat3$Starting.Quantity..SQ. <- NULL
dat <- rbind(dat,dat3)
head(dat)
dat$FAM <- as.numeric(dat$FAM)
dat$VIC <- as.numeric(dat$VIC)
dat <- dat[!(dat$Sample=="NC"),]
dat$Site = "n"
dat <- mutate(dat, Site = derivedFactor(
"Faga'tele" = (grepl("Tele", dat$Sample)),
"Faga'alu" = (grepl("Alu", dat$Sample)),
"Vatia" = (grepl("Vat", dat$Sample)),
"Cannery" = (grepl("Can", dat$Sample)),
"Coconut Point" = (grepl("Coco", dat$Sample)),
"Neg Control" = (grepl("ontrol", dat$Sample)),
method ="first",
.default = NA
))
dat <- dat[!(dat$Site == "Neg Control"),]
dat
dat_ratio <- dat %>%
group_by(Sample, Site) %>%
summarize(FAM_mean = mean(FAM, na.rm = TRUE), VIC_mean = mean(VIC, na.rm = TRUE))
head(dat_ratio)
#not the proper ratio but hehe oh well
dat_ratio$CD_ratio <- (dat_ratio$FAM_mean / dat_ratio$VIC_mean)
dat_ratio$CD_ratio[is.na(dat_ratio$CD_ratio)] <- 0
#maybe look at qPCR for other spp to calc ratios
#need to log transform
#how did tom calc ratios - try to get within same range ?
#The proportion of clade D in each colony was then calculated as D cells/(C cells + D cells), with the number of cells of each clade calculated as 2^(40-avg. CT) divided by the gene copy numbers (Cunning and Baker 2012). from cunning 2013 pf 110
#prop of D
#copy num = 9 and 1 for C and D
dat_ratio$cellnum_C <- (2^(40 - dat_ratio$VIC_mean)) / 9
dat_ratio$cellnum_C[is.na(dat_ratio$cellnum_C)] <- (2^(40-10000000000000))
dat_ratio$cellnum_D <- (2^(40 - dat_ratio$FAM_mean)) / 1
dat_ratio$D_prop <- dat_ratio$cellnum_D / (dat_ratio$cellnum_C + dat_ratio$cellnum_D)
dat_ratio$C_prop <- dat_ratio$cellnum_C / (dat_ratio$cellnum_C + dat_ratio$cellnum_D)
dat_ratio_gather <- gather(dat_ratio, "Species", "Ratio", 7:8)
dat_ratio_gather$Ratio <- round(dat_ratio_gather$Ratio, digits = 4)
ggplot(dat_ratio, aes(x = Site, y = C_prop, fill = Site)) + geom_boxplot() + theme_bw() +
geom_dotplot(binaxis='y', stackdir='center', dotsize=1, binwidth = 0.04) +
scale_fill_brewer(palette = "Set3") + ylab("Log Proportion of Cladocopium") + xlab("") + scale_y_continuous(trans = 'log10')
#no assumptions met
shapiro.test(dat_ratio$C_prop)
#not normal
#p = 2.05e-09
shapiro.test(dat_ratio$cellnum_C)
shapiro.test(dat_ratio$C_prop)
shapiro.test(dat_ratio$D_prop)
shapiro.test(dat_ratio$CD_ratio)
#none are normal
bartlett.test(CD_ratio ~ Site, data=dat_ratio)
#not equal
#p < 2.2e-16
modelCD = lm(CD_ratio ~ Site, data=dat_ratio)
anova(modelCD)
#very signif
shapiro.test(modelCD$residuals)
#not normal
TukeyHSD(modelCD,"Site")
#no assumptions met
shapiro.test(dat_ratio$C_prop)
#not normal
#p = 2.05e-09
shapiro.test(dat_ratio$cellnum_C)
shapiro.test(dat_ratio$C_prop)
shapiro.test(dat_ratio$D_prop)
shapiro.test(dat_ratio$CD_ratio)
#none are normal
bartlett.test(CD_ratio ~ Site, data=dat_ratio)
#not equal
#p < 2.2e-16
#no assumptions met
shapiro.test(dat_ratio$C_prop)
#not normal
#p = 2.05e-09
bartlett.test(CD_ratio ~ Site, data=dat_ratio)
#not equal
#p < 2.2e-16
table(dat_ratio)
dat_ratio$community_type <- "n"
dat_ratio
dat_ratio$community_type <- 0
dat_ratio
[dat_ratio$C_prop > 0,]
dat_ratio$C_prop > 0,
dat_ratio$community_type[dat_ratio$C_prop > 0,] <- 1
dat_ratio[dat_ratio$C_prop > 0,]
dat_ratio$community_type[which(dat_ratio$C_prop > 0),] <- 1
dat_ratio$community_type <- 0
dat_ratio$community_type[which(dat_ratio$C_prop > 0),] <- 1
dat_ratio$community_type[which(dat_ratio$C_prop > 0),] <- "1"
dat_ratio$community_type[which(dat_ratio$C_prop > 0)] <- 1
View(dat_ratio)
dat_ratio$community_type <- "D only"
dat_ratio$community_type[which(dat_ratio$C_prop > 0)] <- "C and D"
dat_ratio
dat_contingency <- select(dat_ratio$sample, dat_ratio$site, dat_ratio$community_type)
dat_ratio
dat_contingency <- select(1:2,10)
dat_contingency <- select(1,2,10)
dat_contingency <- dat_ratio %>%
select(1,2,10)
dat_contingency
table(dat_contingency)
dat_contingency <- dat_ratio %>%
select(2,10)
table(dat_contingency)
dat_contingency <- dat_ratio %>%
select(2,10)
dat_contingency
dat_contingency <- NULL
dat_contingency <- dat_ratio %>%
select(2,10)
dat_contingency
table(dat_contingency)
table(dat_contingency$Sample)
table(dat_contingency$community_type)
table(dat_contingency$Sample, dat_contingency$community_type)
table(dat_contingency$Site, dat_contingency$community_type)
dat_contingency
levels(dat_contingency$Site)
dat_contingency[which(dat_contingency$Site = "method")] <- NULL
dat_contingency[which(dat_contingency$Site == "method")] <- NULL
levels(dat_contingency$Site)
dat_contingency[which(dat_contingency$Site == "Neg Control")] <- NULL
levels(dat_contingency$Site)
dat_contingency <- dat_contingency[dat_contingency$Site != "method" & dat_contingency$Site != "Neg Control", ]
levels(dat_contingency$Site)
table(dat_contingency$Site, dat_contingency$community_type)
dat
dat1 <- read.csv("cleandata/08_05_20_fields1-4.csv")
dat2 <- read.csv("cleandata/10_14_20_fields5-8.csv")
dat3 <- read.csv("cleandata/12_14_20_redos.csv")
dat <- rbind(dat1,dat2)
nrow(dat)
#remove and replace with redos
dat<-dat[!(dat$Sample=="Alu_F2" | dat$Sample=="TeleF5" | dat$Sample=="VatiaF6"),]
dat3 <- dat3[!(dat3$Sample=="AluF4"),]
dat3$Starting.Quantity..SQ. <- NULL
dat <- rbind(dat,dat3)
head(dat)
dat$FAM <- as.numeric(dat$FAM)
dat$VIC <- as.numeric(dat$VIC)
dat <- dat[!(dat$Sample=="NC"),]
dat <- dat[dat$Site != "method" & dat$Site != "Neg Control", ]
dat$Site = "n"
dat
head(dat)
setwd(dir = "~/Desktop/GitHub/Symbiont_qPCR/")
rm( list = ls())
graphics.off()
library(ggplot2)
library(ggpubr)
library(plyr)
library(dplyr)
library(tidyr)
library(reshape2)
library(mosaic)
library(RColorBrewer)
dat1 <- read.csv("cleandata/08_05_20_fields1-4.csv")
dat2 <- read.csv("cleandata/10_14_20_fields5-8.csv")
dat3 <- read.csv("cleandata/12_14_20_redos.csv")
dat <- rbind(dat1,dat2)
nrow(dat)
#remove and replace with redos
dat<-dat[!(dat$Sample=="Alu_F2" | dat$Sample=="TeleF5" | dat$Sample=="VatiaF6"),]
dat3 <- dat3[!(dat3$Sample=="AluF4"),]
dat3$Starting.Quantity..SQ. <- NULL
dat <- rbind(dat,dat3)
head(dat)
dat$FAM <- as.numeric(dat$FAM)
dat$VIC <- as.numeric(dat$VIC)
dat <- dat[!(dat$Sample=="NC"),]
head(dat)
dat
dat1 <- read.csv("cleandata/08_05_20_fields1-4.csv")
dat2 <- read.csv("cleandata/10_14_20_fields5-8.csv")
dat3 <- read.csv("cleandata/12_14_20_redos.csv")
dat <- rbind(dat1,dat2)
nrow(dat)
#remove and replace with redos
dat<-dat[!(dat$Sample=="Alu_F2" | dat$Sample=="TeleF5" | dat$Sample=="VatiaF6"),]
dat3 <- dat3[!(dat3$Sample=="AluF4"),]
dat3$Starting.Quantity..SQ. <- NULL
dat <- rbind(dat,dat3)
head(dat)
dat$FAM <- as.numeric(dat$FAM)
dat$VIC <- as.numeric(dat$VIC)
dat <- dat[!(dat$Sample=="NC"),]
dat$Site = "n"
dat <- mutate(dat, Site = derivedFactor(
"Faga'tele" = (grepl("Tele", dat$Sample)),
"Faga'alu" = (grepl("Alu", dat$Sample)),
"Vatia" = (grepl("Vat", dat$Sample)),
"Cannery" = (grepl("Can", dat$Sample)),
"Coconut Point" = (grepl("Coco", dat$Sample)),
"Neg Control" = (grepl("ontrol", dat$Sample)),
method ="first",
.default = NA
))
dat <- dat[!(dat$Site == "Neg Control"),]
dat
dat1 <- read.csv("cleandata/08_05_20_fields1-4.csv")
dat2 <- read.csv("cleandata/10_14_20_fields5-8.csv")
dat3 <- read.csv("cleandata/12_14_20_redos.csv")
dat <- rbind(dat1,dat2)
nrow(dat)
#remove and replace with redos
dat<-dat[!(dat$Sample=="Alu_F2" | dat$Sample=="TeleF5" | dat$Sample=="VatiaF6"),]
dat3 <- dat3[!(dat3$Sample=="AluF4"),]
dat3$Starting.Quantity..SQ. <- NULL
dat <- rbind(dat,dat3)
head(dat)
dat$FAM <- as.numeric(dat$FAM)
dat$VIC <- as.numeric(dat$VIC)
dat <- dat[!(dat$Sample=="NC"),]
dat$Site = "n"
dat <- mutate(dat, Site = derivedFactor(
"Faga'tele" = (grepl("Tele", dat$Sample)),
"Faga'alu" = (grepl("Alu", dat$Sample)),
"Vatia" = (grepl("Vat", dat$Sample)),
"Cannery" = (grepl("Can", dat$Sample)),
"Coconut Point" = (grepl("Coco", dat$Sample)),
.default = NA
))
dat
dat6 <- dat[!is.na(dat$Site),]
dat6
dat <- dat[!is.na(dat$Site),]
setwd(dir = "~/Desktop/GitHub/Symbiont_qPCR/")
rm( list = ls())
graphics.off()
library(ggplot2)
library(ggpubr)
library(plyr)
library(dplyr)
library(tidyr)
library(reshape2)
library(mosaic)
library(RColorBrewer)
dat1 <- read.csv("cleandata/08_05_20_fields1-4.csv")
dat2 <- read.csv("cleandata/10_14_20_fields5-8.csv")
dat3 <- read.csv("cleandata/12_14_20_redos.csv")
dat <- rbind(dat1,dat2)
nrow(dat)
#remove and replace with redos
dat<-dat[!(dat$Sample=="Alu_F2" | dat$Sample=="TeleF5" | dat$Sample=="VatiaF6"),]
dat3 <- dat3[!(dat3$Sample=="AluF4"),]
dat3$Starting.Quantity..SQ. <- NULL
dat <- rbind(dat,dat3)
head(dat)
dat$FAM <- as.numeric(dat$FAM)
dat$VIC <- as.numeric(dat$VIC)
dat <- dat[!(dat$Sample=="NC"),]
dat$Site = "n"
dat <- mutate(dat, Site = derivedFactor(
"Faga'tele" = (grepl("Tele", dat$Sample)),
"Faga'alu" = (grepl("Alu", dat$Sample)),
"Vatia" = (grepl("Vat", dat$Sample)),
"Cannery" = (grepl("Can", dat$Sample)),
"Coconut Point" = (grepl("Coco", dat$Sample)),
.default = NA
))
dat <- dat[!is.na(dat$Site),]
dat_ratio <- dat %>%
group_by(Sample, Site) %>%
summarize(FAM_mean = mean(FAM, na.rm = TRUE), VIC_mean = mean(VIC, na.rm = TRUE))
head(dat_ratio)
#not the proper ratio but hehe oh well
dat_ratio$CD_ratio <- (dat_ratio$FAM_mean / dat_ratio$VIC_mean)
dat_ratio$CD_ratio[is.na(dat_ratio$CD_ratio)] <- 0
#maybe look at qPCR for other spp to calc ratios
#need to log transform
#how did tom calc ratios - try to get within same range ?
#The proportion of clade D in each colony was then calculated as D cells/(C cells + D cells), with the number of cells of each clade calculated as 2^(40-avg. CT) divided by the gene copy numbers (Cunning and Baker 2012). from cunning 2013 pf 110
#prop of D
#copy num = 9 and 1 for C and D
dat_ratio$cellnum_C <- (2^(40 - dat_ratio$VIC_mean)) / 9
dat_ratio$cellnum_C[is.na(dat_ratio$cellnum_C)] <- (2^(40-10000000000000))
dat_ratio$cellnum_D <- (2^(40 - dat_ratio$FAM_mean)) / 1
dat_ratio$D_prop <- dat_ratio$cellnum_D / (dat_ratio$cellnum_C + dat_ratio$cellnum_D)
dat_ratio$C_prop <- dat_ratio$cellnum_C / (dat_ratio$cellnum_C + dat_ratio$cellnum_D)
dat_ratio_gather <- gather(dat_ratio, "Species", "Ratio", 7:8)
dat_ratio_gather$Ratio <- round(dat_ratio_gather$Ratio, digits = 4)
ggplot(dat_ratio, aes(x = Site, y = C_prop, fill = Site)) + geom_boxplot() + theme_bw() +
geom_dotplot(binaxis='y', stackdir='center', dotsize=1, binwidth = 0.04) +
scale_fill_brewer(palette = "Set3") + ylab("Log Proportion of Cladocopium") + xlab("") + scale_y_continuous(trans = 'log10')
#no assumptions met
shapiro.test(dat_ratio$C_prop)
#not normal
#p = 2.05e-09
bartlett.test(CD_ratio ~ Site, data=dat_ratio)
#not equal
#p < 2.2e-16
dat_ratio$community_type <- "D only"
dat_ratio$community_type[which(dat_ratio$C_prop > 0)] <- "C and D"
dat_contingency <- dat_ratio %>%
select(1,2,10)
levels(dat_contingency$Site)
table(dat_contingency$Site, dat_contingency$community_type)
chisq.test(dat_contingency$Site, dat_contingency$community_type)
fisher.test(dat_contingency$Site, dat_contingency$community_type)
library(DescTools)
install.packages("~/Downloads/DescTools_0.99.41.tgz", repos = NULL, type = .Platform$pkgType)
library(DescTools)
install.packages("~/Downloads/DescTools_0.99.32.tar.gz", repos = NULL, type = "source")
library(DescTools)
install.packages("~/Downloads/DescTools_0.99.32.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/DescTools_0.99.10.tar.gz", repos = NULL, type = "source")
setwd(dir = "~/Desktop/GitHub/Symbiont_qPCR/")
rm( list = ls())
library(ggplot2)
library(ggplot2)
library(ggpubr)
library(ggplot2)
library(ggpubr)
library(plyr)
library(dplyr)
library(tidyr)
library(reshape2)
library(mosaic)
library(mosaic)
library(RColorBrewer)
dat1 <- read.csv("cleandata/08_05_20_fields1-4.csv")
dat2 <- read.csv("cleandata/10_14_20_fields5-8.csv")
dat3 <- read.csv("cleandata/12_14_20_redos.csv")
dat <- rbind(dat1,dat2)
nrow(dat)
#remove and replace with redos
dat<-dat[!(dat$Sample=="Alu_F2" | dat$Sample=="TeleF5" | dat$Sample=="VatiaF6"),]
dat3 <- dat3[!(dat3$Sample=="AluF4"),]
dat3$Starting.Quantity..SQ. <- NULL
dat <- rbind(dat,dat3)
head(dat)
dat$FAM <- as.numeric(dat$FAM)
dat$VIC <- as.numeric(dat$VIC)
dat <- dat[!(dat$Sample=="NC"),]
dat$Site = "n"
dat <- mutate(dat, Site = derivedFactor(
"Faga'tele" = (grepl("Tele", dat$Sample)),
"Faga'alu" = (grepl("Alu", dat$Sample)),
"Vatia" = (grepl("Vat", dat$Sample)),
"Cannery" = (grepl("Can", dat$Sample)),
"Coconut Point" = (grepl("Coco", dat$Sample)),
.default = NA
))
dat <- dat[!is.na(dat$Site),]
#try log transforming ct values first, then calc after
dat_log <- dat
dat_log$FAM_log <- log10(dat_log$FAM)
dat_log$VIC_log <- log10(dat_log$VIC)
dat_ratio_log <- dat_log %>%
group_by(Sample, Site) %>%
summarize(FAM_log_mean = mean(FAM_log, na.rm = TRUE), VIC_log_mean = mean(VIC_log, na.rm = TRUE))
dat_ratio_log
dat_ratio_log$cellnum_C <- (2^(40 - dat_ratio_log$VIC_log_mean)) / 9
dat_ratio_log$cellnum_C[is.na(dat_ratio_log$VIC_log_mean)] <- (2^(40-10000000000000))
dat_ratio_log$cellnum_D <- (2^(40 - dat_ratio_log$FAM_log_mean)) / 1
dat_ratio_log$D_prop <- dat_ratio_log$cellnum_D / (dat_ratio_log$cellnum_C + dat_ratio_log$cellnum_D)
dat_ratio_log$C_prop <- dat_ratio_log$cellnum_C / (dat_ratio_log$cellnum_C + dat_ratio_log$cellnum_D)
dat_ratio_gather <- gather(dat_ratio_log, "Species", "Ratio", 7:8)
dat_ratio_gather$Ratio <- round(dat_ratio_gather$Ratio, digits = 4)
colors = c("royalblue2", "palegreen2", "lightblue", "tomato3", "firebrick4")
ggplot(dat_ratio_log, aes(x = Site, y = C_prop, fill = Site)) + geom_violin() + theme_bw() + ylab("Log Proportion of Cladocopium") + xlab("") + geom_point(shape = 21, position = position_jitter(width = 0.02), size = 3.5, aes(fill = Site))  + scale_x_discrete(limits = c("Faga'tele","Vatia" ,"Faga'alu","Cannery","Coconut Point" )) + scale_color_manual(values = colors) + scale_fill_manual(values = colors) +theme(text=element_text(size=16), axis.text.x = element_text(angle = 45, hjust = 1), axis.title.x = element_text(size = 19))
#ggsave("figures/thesis_newsymbiontfig.png", width = 6, height = 4)
#write.csv(dat_ratio_log, "/Users/Melissa/Desktop/GitHub/Symbiont_qPCR/cleandata/symbiont_log_ratios.csv", row.names = F)
dat_ratio_means <- dat_ratio_log %>%
group_by(Site) %>%
summarize(D_prop_avg = mean(D_prop), C_prop_avg = mean(C_prop))
dat_ratio_means <- gather(dat_ratio_means, "Species", "Ratio", 2:3)
dat_ratio_means$logRatio <- dat_ratio_means$Ratio
#plots mean proportions for each site
ggplot(dat_ratio_means, aes(x = Site, y = logRatio, fill = Species)) + geom_col() + theme_bw()  + ylab("Log Proportion of Durisdinium and Cladocopium") + scale_fill_manual(labels = c("Cladocopium", "Durisdinium"), values = c("violetred2", "royalblue3")) + xlab("") + theme(legend.title = element_blank())
#ggsave("figures/symbionts_logratio_03_25_21.pdf", width = 6, height = 4)
dat_ratio$community_type <- "D only"
dat_ratio_log$community_type <- "D only"
dat_ratio_log$community_type[which(dat_ratio_log$C_prop > 0)] <- "C and D"
dat_contingency <- dat_ratio_log %>%
select(1,2,10)
dat_ratio_log
dat_contingency <- dat_ratio_log %>%
select(1,2,9)
table <- table(dat_contingency$Site, dat_contingency$community_type)
table
savechisq <- chisq.test(table)
savechisq
#expected frequencies under null hypothesis
addmargins(savechisq$expected)
#can run fishers exact?
fisher.test(table)
mosaicplot( t(table), col = c("cornflowerblue", "palegreen", "goldenrod1", "darkorange", "firebrick"), cex.axis = 1,las = 1, sub = "Symbiont Community", ylab = "Site", main = "")
oddsratio(table, method = "wald")
library(DescTools)
oddsratio(table, method = "wald")
library(epitools)
oddsratio(table, method = "wald")
mosaicplot( t(table), col = c("cornflowerblue", "palegreen", "goldenrod1", "darkorange", "firebrick"), cex.axis = 1,las = 1, sub = "Symbiont Community", ylab = "Site", main = "")
