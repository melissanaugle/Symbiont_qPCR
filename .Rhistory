))
dat <- dat[!(dat$Site == "Neg Control"),]
#plot raw values first (not averaged across triplicate)
dat_melt <- melt(dat, id.vars = c("Sample", "Site"), measure.vars = c("FAM", "VIC"))
head(dat_melt)
ggplot(dat_melt, aes(x = Site, y = value, fill = variable)) +
geom_boxplot() + theme_bw() + scale_fill_manual("Symbiont species",
values = c("Blue", "Green"), labels = c("D. trenchii", "C. goreaui")) +
ylab("Ct Value (lower = MORE of that symbiont)")
ggsave("figures/symbiontratios_10_17_20_raw.pdf", width = 6, height = 4)
#this takes the means for the three samples (since done in triplicate)
#if any of the three did not amplify, will say NaN
dat <- dat %>%
group_by(Sample, Site) %>%
summarize(FAM_mean = mean(FAM), VIC_mean = mean(VIC))
head(dat)
#reformat for plotting
dat_melt <- melt(dat, id.vars = c("Sample", "Site"), measure.vars = c("FAM_mean", "VIC_mean"))
head(dat_melt)
ggplot(dat_melt, aes(x = Site, y = value, fill = variable)) +
geom_boxplot() + theme_bw() + scale_fill_manual("Symbiont species",
values = c("Blue", "Green"), labels = c("D. trenchii", "C. goreaui")) +
ylab("Ct Value (lower = MORE of that symbiont)")
ggsave("figures/symbiontratios_10_17_20.pdf", width = 6, height = 4)
replicate_means <- dat %>%
group_by(Sample, Site, Year) %>%
summarize(FAM_mean = mean(FAM), VIC_mean = mean(VIC)) %>%
filter(!FAM_mean == "NaN") %>%
filter(!VIC_mean == "NaN") %>%
filter(!Site == "")
replicate_means <- dat %>%
group_by(Sample, Site) %>%
summarize(FAM_mean = mean(FAM), VIC_mean = mean(VIC)) %>%
filter(!FAM_mean == "NaN") %>%
filter(!VIC_mean == "NaN") %>%
filter(!Site == "")
dat
setwd(dir = "~/Desktop/GitHub/Symbiont_qPCR/")
rm( list = ls())
graphics.off()
library(ggplot2)
library(ggpubr)
require(plyr)
library(dplyr)
library(reshape2)
library(mosaic)
### script to read in Master qPCR data and analyze
# VIC = C and FAM = D
# Makes 3 figures!
#1. raw ct values by site,
#2. averaged triplicate values by site,
#3. averaged triplicate C/D log ratios by site
#read in all data files produced with 'reformat qPCR script'
#should be stored in 'clean_data' folder
dat1 <- read.csv("cleandata/08_05_20_fields1-4.csv")
dat2 <- read.csv("cleandata/10_14_20_fields5-8.csv")
head(dat1)
nrow(dat1)
head(dat2)
nrow(dat2)
dat <- rbind(dat1,dat2)
nrow(dat)
head(dat)
dat$FAM <- as.numeric(dat$FAM)
dat$VIC <- as.numeric(dat$VIC)
dat$Site = "n"
dat <- mutate(dat, Site = derivedFactor(
"Faga'tele" = (grepl("Tele", dat$Sample)),
"Faga'alu" = (grepl("Alu", dat$Sample)),
"Vatia" = (grepl("Vat", dat$Sample)),
"Cannery" = (grepl("Can", dat$Sample)),
"Coconut Point" = (grepl("Coco", dat$Sample)),
"Neg Control" = (grepl("ontrol", dat$Sample)),
method ="first",
.default = NA
))
dat <- dat[!(dat$Site == "Neg Control"),]
#plot raw values first (not averaged across triplicate)
dat_melt <- melt(dat, id.vars = c("Sample", "Site"), measure.vars = c("FAM", "VIC"))
head(dat_melt)
ggplot(dat_melt, aes(x = Site, y = value, fill = variable)) +
geom_boxplot() + theme_bw() + scale_fill_manual("Symbiont species",
values = c("Blue", "Green"), labels = c("D. trenchii", "C. goreaui")) +
ylab("Ct Value (lower = MORE of that symbiont)")
setwd(dir = "~/Desktop/GitHub/Symbiont_qPCR/")
rm( list = ls())
graphics.off()
library(ggplot2)
library(ggpubr)
require(plyr)
library(dplyr)
library(reshape2)
library(mosaic)
### script to read in Master qPCR data and analyze
# VIC = C and FAM = D
# Makes 3 figures!
#1. raw ct values by site,
#2. averaged triplicate values by site,
#3. averaged triplicate C/D log ratios by site
#read in all data files produced with 'reformat qPCR script'
#should be stored in 'clean_data' folder
dat1 <- read.csv("cleandata/08_05_20_fields1-4.csv")
dat2 <- read.csv("cleandata/10_14_20_fields5-8.csv")
head(dat1)
nrow(dat1)
head(dat2)
nrow(dat2)
dat <- rbind(dat1,dat2)
nrow(dat)
head(dat)
dat$FAM <- as.numeric(dat$FAM)
dat$VIC <- as.numeric(dat$VIC)
dat$Site = "n"
dat <- mutate(dat, Site = derivedFactor(
"Faga'tele" = (grepl("Tele", dat$Sample)),
"Faga'alu" = (grepl("Alu", dat$Sample)),
"Vatia" = (grepl("Vat", dat$Sample)),
"Cannery" = (grepl("Can", dat$Sample)),
"Coconut Point" = (grepl("Coco", dat$Sample)),
"Neg Control" = (grepl("ontrol", dat$Sample)),
method ="first",
.default = NA
))
dat <- dat[!(dat$Site == "Neg Control"),]
#plot raw values first (not averaged across triplicate)
dat_melt <- melt(dat, id.vars = c("Sample", "Site"), measure.vars = c("FAM", "VIC"))
head(dat_melt)
ggplot(dat_melt, aes(x = Site, y = value, fill = variable)) +
geom_boxplot() + theme_bw() + scale_fill_manual("Symbiont species",
values = c("Blue", "Green"), labels = c("D. trenchii", "C. goreaui")) +
ylab("Ct Value (lower = MORE of that symbiont)")
ggsave("figures/symbiontratios_10_17_20_raw.pdf", width = 6, height = 4)
#this takes the means for the three samples (since done in triplicate)
#if any of the three did not amplify, will say NaN
dat2 <- dat %>%
group_by(Sample, Site) %>%
summarize(FAM_mean = mean(FAM), VIC_mean = mean(VIC))
head(dat2)
#reformat for plotting
dat2_melt <- melt(dat2, id.vars = c("Sample", "Site"), measure.vars = c("FAM_mean", "VIC_mean"))
head(dat2_melt)
ggplot(dat2_melt, aes(x = Site, y = value, fill = variable)) +
geom_boxplot() + theme_bw() + scale_fill_manual("Symbiont species",
values = c("Blue", "Green"), labels = c("D. trenchii", "C. goreaui")) +
ylab("Ct Value (lower = MORE of that symbiont)")
replicate_means <- dat %>%
group_by(Sample, Site) %>%
summarize(FAM_mean = mean(FAM), VIC_mean = mean(VIC)) %>%
filter(!FAM_mean == "NaN") %>%
filter(!VIC_mean == "NaN") %>%
filter(!Site == "")
replicate_means
# takes the
replicate_means <- dat %>%
group_by(Sample, Site) %>%
filter(!FAM_mean == "NaN") %>%
filter(!VIC_mean == "NaN") %>%
summarize(FAM_mean = mean(FAM), VIC_mean = mean(VIC)) %>%
filter(!Site == "")
# takes the
replicate_means <- dat %>%
group_by(Sample, Site) %>%
filter(!FAM == "NaN") %>%
filter(!VIC == "NaN") %>%
summarize(FAM_mean = mean(FAM), VIC_mean = mean(VIC)) %>%
filter(!Site == "")
replicate_means
replicate_means$CD_logratio <- log(replicate_means$VICCq_mean / replicate_means$FAMCq_mean)
replicate_means$CD_logratio <- log(replicate_means$VIC_mean / replicate_means$FAM_mean)
replicate_means$Sample <- as.character(replicate_means$Sample)
ggplot(replicate_means, aes(Site, CD_logratio, fill = Site)) + geom_bar(stat = "identity")
ggplot(replicate_means, aes(Site, CD_logratio, fill = Site)) + geom_bar(stat = "identity") + theme_minimal()
ggplot(replicate_means, aes(Site, CD_logratio, fill = Site)) +
geom_bar(stat = "identity") + theme_minimal() + xlab("C:D Log Ratio")
ggplot(replicate_means, aes(Site, CD_logratio, fill = Site)) +
geom_bar(stat = "identity") + theme_minimal() + ylab("C:D Log Ratio")
setwd(dir = "~/Desktop/GitHub/Symbiont_qPCR/")
rm( list = ls())
graphics.off()
library(ggplot2)
library(ggpubr)
require(plyr)
library(dplyr)
library(reshape2)
library(mosaic)
### script to read in Master qPCR data and analyze
# VIC = C and FAM = D
# Makes 3 figures!
#1. raw ct values by site,
#2. averaged triplicate values by site,
#3. averaged triplicate C/D log ratios by site
#read in all data files produced with 'reformat qPCR script'
#should be stored in 'clean_data' folder
dat1 <- read.csv("cleandata/08_05_20_fields1-4.csv")
dat2 <- read.csv("cleandata/10_14_20_fields5-8.csv")
head(dat1)
nrow(dat1)
head(dat2)
nrow(dat2)
dat <- rbind(dat1,dat2)
nrow(dat)
head(dat)
dat$FAM <- as.numeric(dat$FAM)
dat$VIC <- as.numeric(dat$VIC)
dat$Site = "n"
dat <- mutate(dat, Site = derivedFactor(
"Faga'tele" = (grepl("Tele", dat$Sample)),
"Faga'alu" = (grepl("Alu", dat$Sample)),
"Vatia" = (grepl("Vat", dat$Sample)),
"Cannery" = (grepl("Can", dat$Sample)),
"Coconut Point" = (grepl("Coco", dat$Sample)),
"Neg Control" = (grepl("ontrol", dat$Sample)),
method ="first",
.default = NA
))
dat <- dat[!(dat$Site == "Neg Control"),]
#plot raw values first (not averaged across triplicate)
dat_melt <- melt(dat, id.vars = c("Sample", "Site"), measure.vars = c("FAM", "VIC"))
head(dat_melt)
ggplot(dat_melt, aes(x = Site, y = value, fill = variable)) +
geom_boxplot() + theme_bw() + scale_fill_manual("Symbiont species",
values = c("Blue", "Green"), labels = c("D. trenchii", "C. goreaui")) +
ylab("Ct Value (lower = MORE of that symbiont)")
ggsave("figures/symbiontsraw_10_17_20.pdf", width = 6, height = 4)
#this takes the means for the three samples (since done in triplicate)
#if any of the three did not amplify, will say NaN
dat2 <- dat %>%
group_by(Sample, Site) %>%
summarize(FAM_mean = mean(FAM), VIC_mean = mean(VIC))
head(dat2)
#reformat for plotting
dat2_melt <- melt(dat2, id.vars = c("Sample", "Site"), measure.vars = c("FAM_mean", "VIC_mean"))
head(dat2_melt)
ggplot(dat2_melt, aes(x = Site, y = value, fill = variable)) +
geom_boxplot() + theme_bw() + scale_fill_manual("Symbiont species",
values = c("Blue", "Green"), labels = c("D. trenchii", "C. goreaui")) +
ylab("Ct Value (lower = MORE of that symbiont)")
ggsave("figures/symbiontstriplicate_10_17_20.pdf", width = 6, height = 4)
#lower Ct value means MORE of that symbiont
# removes NAs (so not all three need to amplify (*maybe should change this*)
# then summarizes by site
replicate_means <- dat %>%
group_by(Sample, Site) %>%
filter(!FAM == "NaN") %>%
filter(!VIC == "NaN") %>%
summarize(FAM_mean = mean(FAM), VIC_mean = mean(VIC)) %>%
filter(!Site == "")
replicate_means$CD_logratio <- log(replicate_means$VIC_mean / replicate_means$FAM_mean)
#lower ratio means more C, higher means more D
#replicate_means
replicate_means$Sample <- as.character(replicate_means$Sample)
ggplot(replicate_means, aes(Site, CD_logratio, fill = Site)) +
geom_bar(stat = "identity") + theme_minimal() + ylab("C:D Log Ratio")
ggsave("figures/symbiontlogratios_10_17_20.pdf", width = 6, height = 4)
ggplot(dat_melt, aes(x = Site, y = value, fill = variable)) +
geom_boxplot() + theme_bw() + scale_fill_manual("Symbiont species",
values = c("Blue", "DarkGreen"), labels = c("D. trenchii", "C. goreaui")) +
ylab("Ct Value (lower = MORE of that symbiont)")
ggplot(dat_melt, aes(x = Site, y = value, fill = variable)) +
geom_boxplot() + theme_bw() + scale_fill_manual("Symbiont species",
values = c("Blue", "ForestGreen"), labels = c("D. trenchii", "C. goreaui")) +
ylab("Ct Value (lower = MORE of that symbiont)")
ggplot(replicate_means, aes(Site, CD_logratio, fill = Site)) +
geom_bar(stat = "identity") + theme_minimal() + ylab("C:D Log Ratio") +
scale_fill_manual("Site",
values = c("Red", "DarkOrange", "DarkYellow"))
ggplot(replicate_means, aes(Site, CD_logratio, fill = Site)) +
geom_bar(stat = "identity") + theme_minimal() + ylab("C:D Log Ratio") +
scale_fill_manual("Site",
values = c("Red", "DarkOrange", "Yellow"))
ggplot(replicate_means, aes(Site, CD_logratio, fill = Site)) +
geom_bar(stat = "identity") + theme_minimal() + ylab("C:D Log Ratio") +
scale_fill_manual("Site",
values = c("DarkBlue", "MediumGreen", "LightGreen"))
ggplot(replicate_means, aes(Site, CD_logratio, fill = Site)) +
geom_bar(stat = "identity") + theme_minimal() + ylab("C:D Log Ratio") +
scale_fill_manual("Site",
values = c("LightGreen", "DarkGreen", "DarkBlue"))
ggplot(replicate_means, aes(Site, CD_logratio, fill = Site)) +
geom_bar(stat = "identity") + theme_minimal() + ylab("C:D Log Ratio") +
scale_fill_manual("Site",
values = c("MediumLightGreen", "DarkGreen", "DarkBlue"))
ggplot(replicate_means, aes(Site, CD_logratio, fill = Site)) +
geom_bar(stat = "identity") + theme_minimal() + ylab("C:D Log Ratio") +
scale_fill_manual("Site",
values = c("LightGreen", "DarkGreen", "DarkBlue"))
ggplot(replicate_means, aes(Site, CD_logratio, fill = Site)) +
geom_bar(stat = "identity") + theme_minimal() + ylab("C:D Log Ratio") +
scale_fill_manual("Site",
values = c("Orange", "DarkGreen", "DarkBlue"))
ggplot(replicate_means, aes(Site, CD_logratio, fill = Site)) +
geom_bar(stat = "identity") + theme_minimal() + ylab("C:D Log Ratio")
setwd(dir = "~/Desktop/GitHub/Symbiont_qPCR/")
rm( list = ls())
graphics.off()
library(ggplot2)
library(ggpubr)
require(plyr)
library(dplyr)
library(reshape2)
library(mosaic)
### script to read in Master qPCR data and analyze
# VIC = C and FAM = D
# Makes 3 figures!
#1. raw ct values by site,
#2. averaged triplicate values by site,
#3. averaged triplicate C/D log ratios by site
#read in all data files produced with 'reformat qPCR script'
#should be stored in 'clean_data' folder
dat1 <- read.csv("cleandata/08_05_20_fields1-4.csv")
dat2 <- read.csv("cleandata/10_14_20_fields5-8.csv")
head(dat1)
nrow(dat1)
head(dat2)
nrow(dat2)
dat <- rbind(dat1,dat2)
nrow(dat)
head(dat)
dat$FAM <- as.numeric(dat$FAM)
dat$VIC <- as.numeric(dat$VIC)
dat$Site = "n"
dat <- mutate(dat, Site = derivedFactor(
"Faga'tele" = (grepl("Tele", dat$Sample)),
"Faga'alu" = (grepl("Alu", dat$Sample)),
"Vatia" = (grepl("Vat", dat$Sample)),
"Cannery" = (grepl("Can", dat$Sample)),
"Coconut Point" = (grepl("Coco", dat$Sample)),
"Neg Control" = (grepl("ontrol", dat$Sample)),
method ="first",
.default = NA
))
dat <- dat[!(dat$Site == "Neg Control"),]
#plot raw values first (not averaged across triplicate)
dat_melt <- melt(dat, id.vars = c("Sample", "Site"), measure.vars = c("FAM", "VIC"))
head(dat_melt)
ggplot(dat_melt, aes(x = Site, y = value, fill = variable)) +
geom_boxplot() + theme_bw() + scale_fill_manual("Symbiont species",
values = c("Blue", "ForestGreen"), labels = c("D. trenchii", "C. goreaui")) +
ylab("Ct Value (lower = MORE of that symbiont)")
ggsave("figures/symbiontsraw_10_17_20.pdf", width = 6, height = 4)
#this takes the means for the three samples (since done in triplicate)
#if any of the three did not amplify, will say NaN
dat2 <- dat %>%
group_by(Sample, Site) %>%
summarize(FAM_mean = mean(FAM), VIC_mean = mean(VIC))
head(dat2)
#reformat for plotting
dat2_melt <- melt(dat2, id.vars = c("Sample", "Site"), measure.vars = c("FAM_mean", "VIC_mean"))
head(dat2_melt)
ggplot(dat2_melt, aes(x = Site, y = value, fill = variable)) +
geom_boxplot() + theme_bw() + scale_fill_manual("Symbiont species",
values = c("Blue", "ForestGreen"), labels = c("D. trenchii", "C. goreaui")) +
ylab("Ct Value (lower = MORE of that symbiont)")
ggsave("figures/symbiontstriplicate_10_17_20.pdf", width = 6, height = 4)
#lower Ct value means MORE of that symbiont
# removes NAs (so not all three need to amplify (*maybe should change this*)
# then summarizes by site
replicate_means <- dat %>%
group_by(Sample, Site) %>%
filter(!FAM == "NaN") %>%
filter(!VIC == "NaN") %>%
summarize(FAM_mean = mean(FAM), VIC_mean = mean(VIC)) %>%
filter(!Site == "")
replicate_means$CD_logratio <- log(replicate_means$VIC_mean / replicate_means$FAM_mean)
#lower ratio means more C, higher means more D
#replicate_means
replicate_means$Sample <- as.character(replicate_means$Sample)
ggplot(replicate_means, aes(Site, CD_logratio, fill = Site)) +
geom_bar(stat = "identity") + theme_minimal() + ylab("C:D Log Ratio")
ggsave("figures/symbiontlogratios_10_17_20.pdf", width = 6, height = 4)
modelCD = lm(CD_logratio ~ Site, data=replicate_means)
anova(modelCD)
#signif
shapiro.test(modelCD$residuals)
#normal
HSD.test(modelCD,"Site")$groups
se <- function(x) sd(x)/sqrt(length(x))
data.means <- replicate_means %>%
group_by(Site) %>%
summarise(CD_logratio_mean = mean(CD_logratio))
data.means
data.se <- replicate_means %>%
group_by(Site) %>%
summarise(CD_logratio_se = se(CD_logratio))
data.se
ggplot(data.means, aes(Site, CD_logratio_mean, fill = Site)) + geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = data.means$CD_logratio_mean - data.se$CD_logratio_se,
ymax = data.means$CD_logratio_mean + data.se$CD_logratio_se),
width = .1, colour = "black") + theme_bw() + ylab("C:D Log Ratio") +
ggtitle("")
ggplot(replicate_means, aes(Site, CD_logratio, fill = Site)) +
geom_boxplot(stat = "identity") + theme_minimal() + ylab("C:D Log Ratio")
ggplot(replicate_means, aes(Site, CD_logratio, fill = Site)) +
geom_boxplot() + theme_minimal() + ylab("C:D Log Ratio")
ggsave("figures/symbiontlogratios_10_17_20.pdf", width = 6, height = 4)
ggplot(data.means, aes(Site, CD_logratio_mean, fill = Site)) + geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = data.means$CD_logratio_mean - data.se$CD_logratio_se,
ymax = data.means$CD_logratio_mean + data.se$CD_logratio_se),
width = .1, colour = "black") + theme_bw() + ylab("C:D Log Ratio") +
ggtitle("")
anova(modelCD)
modelCD = lm(CD_logratio ~ Site, data=replicate_means)
anova(modelCD)
dat
dat2
dat
dat
replicate_means
dat3 <- dat %>%
group_by(Sample, Site) %>%
filter(!FAM == "NaN")
dat3
dat3 <- dat %>%
group_by(Sample, Site) %>%
filter(!FAM == "NaN") %>%
gsub("NaN", 40)
dat3
dat3 <- dat %>%
group_by(Sample, Site) %>%
filter(!FAM == "NaN") %>%
sub("NaN", 40)
dat3
setwd(dir = "~/Desktop/GitHub/Symbiont_qPCR/")
rm( list = ls())
graphics.off()
library(ggplot2)
library(ggpubr)
require(plyr)
library(dplyr)
library(reshape2)
library(mosaic)
### script to read in Master qPCR data and analyze
# VIC = C and FAM = D
# Makes 3 figures!
#1. raw ct values by site,
#2. averaged triplicate values by site,
#3. averaged triplicate C/D log ratios by site
#read in all data files produced with 'reformat qPCR script'
#should be stored in 'clean_data' folder
dat1 <- read.csv("cleandata/08_05_20_fields1-4.csv")
dat2 <- read.csv("cleandata/10_14_20_fields5-8.csv")
head(dat1)
nrow(dat1)
head(dat2)
nrow(dat2)
dat <- rbind(dat1,dat2)
nrow(dat)
head(dat)
dat$FAM <- as.numeric(dat$FAM)
dat$VIC <- as.numeric(dat$VIC)
dat$Site = "n"
dat <- mutate(dat, Site = derivedFactor(
"Faga'tele" = (grepl("Tele", dat$Sample)),
"Faga'alu" = (grepl("Alu", dat$Sample)),
"Vatia" = (grepl("Vat", dat$Sample)),
"Cannery" = (grepl("Can", dat$Sample)),
"Coconut Point" = (grepl("Coco", dat$Sample)),
"Neg Control" = (grepl("ontrol", dat$Sample)),
method ="first",
.default = NA
))
dat <- dat[!(dat$Site == "Neg Control"),]
#plot raw values first (not averaged across triplicate)
dat_melt <- melt(dat, id.vars = c("Sample", "Site"), measure.vars = c("FAM", "VIC"))
head(dat_melt)
ggplot(dat_melt, aes(x = Site, y = value, fill = variable)) +
geom_boxplot() + theme_bw() + scale_fill_manual("Symbiont species",
values = c("Blue", "ForestGreen"), labels = c("D. trenchii", "C. goreaui")) +
ylab("Ct Value (lower = MORE of that symbiont)")
ggsave("figures/symbiontsraw_10_17_20.pdf", width = 6, height = 4)
#this takes the means for the three samples (since done in triplicate)
#if any of the three did not amplify, will say NaN
dat2 <- dat %>%
group_by(Sample, Site) %>%
summarize(FAM_mean = mean(FAM), VIC_mean = mean(VIC))
head(dat2)
#reformat for plotting
dat2_melt <- melt(dat2, id.vars = c("Sample", "Site"), measure.vars = c("FAM_mean", "VIC_mean"))
head(dat2_melt)
ggplot(dat2_melt, aes(x = Site, y = value, fill = variable)) +
geom_boxplot() + theme_bw() + scale_fill_manual("Symbiont species",
values = c("Blue", "ForestGreen"), labels = c("D. trenchii", "C. goreaui")) +
ylab("Ct Value (lower = MORE of that symbiont)")
ggsave("figures/symbiontstriplicate_10_17_20.pdf", width = 6, height = 4)
#lower Ct value means MORE of that symbiont
# removes NAs (so not all three need to amplify (*maybe should change this*)
# then summarizes by site
replicate_means <- dat %>%
group_by(Sample, Site) %>%
filter(!FAM == "NaN") %>%
filter(!VIC == "NaN") %>%
summarize(FAM_mean = mean(FAM), VIC_mean = mean(VIC)) %>%
filter(!Site == "")
replicate_means$CD_logratio <- log(replicate_means$VIC_mean / replicate_means$FAM_mean)
#lower ratio means more C, higher means more D
#replicate_means
replicate_means$Sample <- as.character(replicate_means$Sample)
ggplot(replicate_means, aes(Site, CD_logratio, fill = Site)) +
geom_boxplot() + theme_minimal() + ylab("C:D Log Ratio")
ggsave("figures/symbiontlogratios_10_17_20.pdf", width = 6, height = 4)
#lower ratio = more C
# higher ratio = more D
# another plot
dat3 <- dat %>%
group_by(Sample, Site) %>%
filter(!FAM == "NaN") %>%
sub("NaN", 40)
dat3
dat3 <- dat %>%
group_by(Sample, Site) %>%
filter(!FAM == "NaN")
dat3
